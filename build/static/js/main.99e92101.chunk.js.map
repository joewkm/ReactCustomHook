{"version":3,"sources":["components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","components/hooks/use-http.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","useHTTP","useState","isLoading","setIsLoading","setError","sendRequest","useCallback","requestConfig","applyData","a","fetch","url","method","headers","Headers","body","JSON","stringify","response","ok","console","log","Error","json","data","message","NewTask","sendTaskRequest","createTask","taskText","taskData","createdTask","name","onAddTask","enterTaskHandler","bind","App","tasks","setTasks","fetchTasks","useEffect","taskObj","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99e92101.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3x70R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1ThE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__NDvR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__koY8-\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState, useCallback } from 'react';\r\n\r\nconst useHTTP = () => {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n \r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        requestConfig.url, {\r\n          method : requestConfig.method ? requestConfig.method : 'GET',\r\n          headers: requestConfig.Headers ? requestConfig.headers : {},\r\n          body : requestConfig.body ? JSON.stringify(requestConfig.body) : null\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        console.log(response);\r\n        throw new Error('Request failed!');\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      applyData(data);\r\n\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest\r\n  };\r\n};\r\n\r\nexport default useHTTP;","import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHTTP from '../hooks/use-http';\n\n\nconst NewTask = (props) => {\n  useHTTP();\n\n  const {isLoading, error, sendRequest : sendTaskRequest} = useHTTP();\n\n\n  const createTask = (taskText, taskData) =>{\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n    props.onAddTask(createdTask);\n  }\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url:'https://react-custom-hook-555c5-default-rtdb.firebaseio.com/tasks.json',\n        method: 'POST',\n        body: { text: taskText },\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }, \n      createTask.bind(null, taskText)\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHTTP from './components/hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const {isLoading, error, sendRequest: fetchTasks} = useHTTP();\n\n  useEffect(() => {\n\n    const transformTasks = taskObj => {\n      const loadedTasks = [];\n      for (const taskKey in taskObj) {\n        loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text });\n      }\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks(\n      {url: 'https://react-custom-hook-555c5-default-rtdb.firebaseio.com/tasks.json'},\n      transformTasks\n    );\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}